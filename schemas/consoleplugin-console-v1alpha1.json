{
  "description": "ConsolePlugin is an extension for customizing OpenShift web console by dynamically loading code from another service running on the cluster.",
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "console.openshift.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ConsolePlugin"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "ConsolePluginSpec is the desired plugin configuration.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "displayName",
        "service"
      ],
      "properties": {
        "displayName": {
          "description": "displayName is the display name of the plugin.",
          "type": "string"
        },
        "service": {
          "description": "service is a Kubernetes Service that exposes the plugin using a deployment with an HTTP server. The Service must use HTTPS and service serving certificate. The console backend will proxy the plugins assets from the Service using the service CA bundle.",
          "type": "object",
          "required": [
            "basePath",
            "name",
            "namespace",
            "port"
          ],
          "properties": {
            "basePath": {
              "description": "basePath is the path to the plugin's assets. The primary asset it the manifest file called `plugin-manifest.json`, which is a JSON document that contains metadata about the plugin and the extensions.",
              "type": "string"
            },
            "name": {
              "description": "name of Service that is serving the plugin.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace of Service that is serving the plugin.",
              "type": "string"
            },
            "port": {
              "description": "port on which the Service that is serving the plugin is listening to.",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "console.openshift.io",
      "kind": "ConsolePlugin",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}