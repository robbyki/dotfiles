{
  "description": "KubeControllerManager provides information to configure an operator to manage kube-controller-manager.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "operator.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "KubeControllerManager"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "spec is the specification of the desired behavior of the Kubernetes Controller Manager",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "failedRevisionLimit": {
          "description": "failedRevisionLimit is the number of failed static pod installer revisions to keep on disk and in the api -1 = unlimited, 0 or unset = 5 (default)",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "forceRedeploymentReason": {
          "description": "forceRedeploymentReason can be used to force the redeployment of the operand by providing a unique string. This provides a mechanism to kick a previously failed deployment and provide a reason why you think it will work this time instead of failing again on the same config.",
          "type": [
            "string",
            "null"
          ]
        },
        "logLevel": {
          "description": "logLevel is an intent based logging for an overall component.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for their operands. \n Valid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\".",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "managementState": {
          "description": "managementState indicates whether and how the operator should manage the component",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(Managed|Force)$"
        },
        "observedConfig": {
          "description": "observedConfig holds a sparse config that controller has observed from the cluster state.  It exists in spec because it is an input to the level for the operator",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "operatorLogLevel": {
          "description": "operatorLogLevel is an intent based logging for the operator itself.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for themselves. \n Valid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\".",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "succeededRevisionLimit": {
          "description": "succeededRevisionLimit is the number of successful static pod installer revisions to keep on disk and in the api -1 = unlimited, 0 or unset = 5 (default)",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "unsupportedConfigOverrides": {
          "description": "unsupportedConfigOverrides holds a sparse config that will override any previously set options.  It only needs to be the fields to override it will end up overlaying in the following order: 1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "useMoreSecureServiceCA": {
          "description": "useMoreSecureServiceCA indicates that the service-ca.crt provided in SA token volumes should include only enough certificates to validate service serving certificates. Once set to true, it cannot be set to false. Even if someone finds a way to set it back to false, the service-ca.crt files that previously existed will only have the more secure content.",
          "type": [
            "boolean",
            "null"
          ]
        }
      }
    },
    "status": {
      "description": "status is the most recently observed status of the Kubernetes Controller Manager",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "conditions is a list of conditions and their status",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OperatorCondition is just the standard condition fields.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "generations": {
          "description": "generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "group": {
                "description": "group is the group of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              },
              "hash": {
                "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps",
                "type": [
                  "string",
                  "null"
                ]
              },
              "lastGeneration": {
                "description": "lastGeneration is the last generation of the workload controller involved",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "name": {
                "description": "name is the name of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "namespace is where the thing you're tracking is",
                "type": [
                  "string",
                  "null"
                ]
              },
              "resource": {
                "description": "resource is the resource type of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "latestAvailableRevision": {
          "description": "latestAvailableRevision is the deploymentID of the most recent deployment",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "latestAvailableRevisionReason": {
          "description": "latestAvailableRevisionReason describe the detailed reason for the most recent deployment",
          "type": [
            "string",
            "null"
          ]
        },
        "nodeStatuses": {
          "description": "nodeStatuses track the deployment values and errors across individual nodes",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "NodeStatus provides information about the current state of a particular node managed by this operator.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "currentRevision": {
                "description": "currentRevision is the generation of the most recently successful deployment",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int32"
              },
              "lastFailedCount": {
                "description": "lastFailedCount is how often the last failed revision failed.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "lastFailedRevision": {
                "description": "lastFailedRevision is the generation of the deployment we tried and failed to deploy.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int32"
              },
              "lastFailedRevisionErrors": {
                "description": "lastFailedRevisionErrors is a list of the errors during the failed deployment referenced in lastFailedRevision",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "lastFailedTime": {
                "description": "lastFailedTime is the time the last failed revision failed the last time.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "nodeName": {
                "description": "nodeName is the name of the node",
                "type": [
                  "string",
                  "null"
                ]
              },
              "targetRevision": {
                "description": "targetRevision is the generation of the deployment we're trying to apply",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int32"
              }
            }
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the last generation change you've dealt with",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "readyReplicas": {
          "description": "readyReplicas indicates how many replicas are ready and at the desired state",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "version": {
          "description": "version is the level this availability applies to",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "operator.openshift.io",
      "kind": "KubeControllerManager",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}