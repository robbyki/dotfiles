{
  "description": "MachineConfigPool describes a pool of MachineConfigs.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "machineconfiguration.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "MachineConfigPool"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "MachineConfigPoolSpec is the spec for MachineConfigPool resource.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "configuration": {
          "description": "The targeted MachineConfig object for the machine config pool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "machineConfigSelector": {
          "description": "machineConfigSelector specifies a label selector for MachineConfigs. Refer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ on how label and selectors work.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "maxUnavailable": {
          "description": "maxUnavailable specifies the percentage or constant number of machines that can be updating at any given time. default is 1.",
          "x-kubernetes-int-or-string": true
        },
        "nodeSelector": {
          "description": "nodeSelector specifies a label selector for Machines",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "paused": {
          "description": "paused specifies whether or not changes to this machine config pool should be stopped. This includes generating new desiredMachineConfig and update of machines.",
          "type": [
            "boolean",
            "null"
          ]
        }
      }
    },
    "status": {
      "description": "MachineConfigPoolStatus is the status for MachineConfigPool resource.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "conditions represents the latest available observations of current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "MachineConfigPoolCondition contains condition information for an MachineConfigPool.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable description of the details of the last transition, complementing reason.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "reason is a brief machine readable explanation for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "status of the condition, one of ('True', 'False', 'Unknown').",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "type of the condition, currently ('Done', 'Updating', 'Failed').",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "configuration": {
          "description": "configuration represents the current MachineConfig object for the machine config pool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "degradedMachineCount": {
          "description": "degradedMachineCount represents the total number of machines marked degraded (or unreconcilable). A node is marked degraded if applying a configuration failed..",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "machineCount": {
          "description": "machineCount represents the total number of machines in the machine config pool.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "observedGeneration": {
          "description": "observedGeneration represents the generation observed by the controller.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "readyMachineCount": {
          "description": "readyMachineCount represents the total number of ready machines targeted by the pool.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "unavailableMachineCount": {
          "description": "unavailableMachineCount represents the total number of unavailable (non-ready) machines targeted by the pool. A node is marked unavailable if it is in updating state or NodeReady condition is false.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "updatedMachineCount": {
          "description": "updatedMachineCount represents the total number of machines targeted by the pool that have the CurrentMachineConfig as their config.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "machineconfiguration.openshift.io",
      "kind": "MachineConfigPool",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}