{
  "description": "MachineConfig defines the configuration for a machine",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "machineconfiguration.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "MachineConfig"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "MachineConfigSpec is the spec for MachineConfig",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "config": {
          "description": "Config is a Ignition Config object.",
          "required": [
            "ignition"
          ],
          "x-kubernetes-preserve-unknown-fields": true
        },
        "extensions": {
          "description": "List of additional features that can be enabled on host"
        },
        "fips": {
          "description": "FIPS controls FIPS mode",
          "type": [
            "boolean",
            "null"
          ]
        },
        "kernelArguments": {
          "description": "KernelArguments contains a list of kernel arguments to be added"
        },
        "kernelType": {
          "description": "Contains which kernel we want to be running like default (traditional), realtime",
          "type": [
            "string",
            "null"
          ]
        },
        "osImageURL": {
          "description": "OSImageURL specifies the remote location that will be used to fetch the OS to fetch the OS.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "machineconfiguration.openshift.io",
      "kind": "MachineConfig",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}