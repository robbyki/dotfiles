// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+shift+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookViewType == 'jupyter-notebook'"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+shift+0",
    "command": "-extension.resetState"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+2",
    "command": "-extension.vim_ctrl+shift+2",
    "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+alt+s",
    "command": "metals.new-scala-file"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+escape",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+k ctrl+h",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+shift+alt+o",
    "command": "workbench.output.action.clearOutput"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "!editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+t",
    "command": "workbench.action.terminal.clear"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-emojisense.quickEmojitext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f9",
    "command": "workbench.action.debug.selectandstart"
  },
  {
    "key": "alt+f9",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveFiles"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+alt+h",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+l",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+f1",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "ctrl+-",
    "command": "-fontshortcuts.decreaseEditorFontSize",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+=",
    "command": "-fontshortcuts.increaseEditorFontSize",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+[Equal]",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-extension.vsKubernetesDescribe.Refresh",
    "when": "vscodeKubernetesDescribeContext"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+shift+escape",
    "command": "workbench.action.closePanel"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+shift+alt+f",
    "command": "gitlens.fetchRepositories"
  },
  {
    "key": "shift+alt+f10",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openLocalFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "alt+f1",
    "command": "-editor.action.showAccessibilityHelp",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "ctrl+alt+=",
    "command": "-extension.profile.select"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-java.view.package.revealFileInOS",
    "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-rest-client.generate-codesnippet",
    "when": "editorTextFocus && editorLangId == 'plaintext'"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-rest-client.generate-codesnippet",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-latex-workshop.clean",
    "when": "!config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
  },
  {
    "key": "ctrl+l alt+c",
    "command": "-latex-workshop.clean",
    "when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
  },
  {
    "key": "ctrl+shift+alt+c",
    "command": "-java.view.package.copyRelativeFilePath",
    "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-java.view.package.copyFilePath",
    "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-rest-client.request",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-rest-client.request",
    "when": "editorTextFocus && editorLangId == 'plaintext'"
  },
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+alt+insert",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+alt+r",
    "command": "metals.build-import"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+k w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+=",
    "command": "-workbench.action.zoomIn"
  },

  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+f1",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  }
]
